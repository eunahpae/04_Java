package com.ohgiraffers.section03.branching;

public class B_continue {

  public void testSimpleContinueStatement() {

    /* comment. continue 사용에 대한 흐름을 이해하고 적용할 수 있다. */
    /* continue 문은 반복문 내에서 사용된다.
     * 현재 반복의 남은 부분을 생략하고, 반복문의 증감식으로 바로 넘어간다.
     * 일반적으로 조건문(if)과 함께 사용되며, 특정 조건을 만족하지 않을 때 반복 회차를 건너뛸 수 있다.
     * if(조건식) { continue; }
     * 즉, '예외적인 조건을 제외하고 로직을 수행하고 싶을 때' 자주 사용된다.
     */

    /* 1부터 100까지 숫자 중, 4의 배수이면서 5의 배수인 값만 출력 */
    for (int i = 1; i <= 100; i++) {

      // 조건을 만족하는 경우에만 출력하고, 그 외에는 반복의 나머지 부분을 건너뜀
      if (i % 4 == 0 && i % 5 == 0) {
        System.out.println("i = " + i);
      } else {
        // continue는 조건을 만족하지 않는 경우 반복의 뒷부분(여기서는 println)을 건너뛰고,
        // 곧바로 다음 반복으로 넘어가게 한다.
        // 이 방식은 조건이 복잡하거나 반복 내에 다른 실행 코드가 있을 때 효율적으로 동작 흐름을 제어할 수 있다.
        continue;
      }

      /*
       * 위 코드는 아래처럼 더 간결하게 표현할 수도 있다.
       * 예외 조건을 먼저 걸러내고, 나머지 로직을 간단히 작성하는 방식이다.
       *
       * for (int i = 1; i <= 100; i++) {
       *     if (!(i % 4 == 0 && i % 5 == 0)) {
       *         continue;
       *     }
       *     System.out.println("i = " + i);
       * }
       *
       * 이 방식은 복잡한 로직이 있을 때 예외 케이스를 위에서 걸러내기 때문에 가독성과 유지보수 측면에서 유리하다.
       */
    }
  }
}