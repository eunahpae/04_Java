package com.ohgiraffers.section01.array;

public class Application1 {

  public static void main(String[] args) {

    /* comment. 배열에 대해 이해하고 배열의 사용 목적을 이해할 수 있다. */
    /* 배열이란?
     * 동일한 자료형의 여러 값을 하나의 이름(변수명)으로 묶어서 저장할 수 있는 자료구조이다.
     * 메모리 상에서 연속된 공간을 차지하며, 각 요소는 인덱스를 통해 접근할 수 있다.
     * 자바에서 배열은 heap 영역에 생성되며, new 연산자를 통해 동적으로 메모리를 할당한다.
     */

    /* 배열의 사용 이유
     * 만약 배열을 사용하지 않는다면, 같은 자료형의 데이터를 저장하기 위해 각각의 변수명을 만들어야 한다.
     * 이 경우 다음과 같은 문제가 발생한다:
     *  1. 변수마다 이름을 따로 관리해야 하므로 유지보수가 어렵다.
     *  2. 반복문을 이용해 연속/일괄 처리(합산, 검색 등)를 할 수 없다.
     *     → 데이터가 많아질수록 비효율적이다.
     */

    // 배열을 사용하지 않고 변수로만 값을 관리한 예 (비효율적인 방식)
    int num1 = 10;
    int num2 = 20;
    int num3 = 30;
    int num4 = 40;
    int num5 = 50;

    int sum = 0;

    sum += num1;
    sum += num2;
    sum += num3;
    sum += num4;
    sum += num5;

    // 배열 선언 및 메모리 할당 (길이 5의 정수형 배열)
    int[] arr = new int[5];

    /* 배열은 하나의 이름으로 여러 개의 데이터를 관리할 수 있으며,
     * 각 요소는 0번 인덱스부터 시작하여 인덱스를 이용해 접근한다.
     * 아래는 배열에 개별적으로 값을 할당한 예이다.
     */
    arr[0] = 10;
    arr[1] = 20;
    arr[2] = 30;
    arr[3] = 40;
    arr[4] = 50;

    /* 위와 같은 작업은 반복문을 사용하면 더 간결하고 효율적으로 작성할 수 있다.
     * 아래는 반복문을 이용해 배열에 10씩 증가하는 값을 순차적으로 할당하는 예이다.
     */
    for (int i = 0, value = 0; i < arr.length; i++) {
      arr[i] = value += 10;
    }

    // 배열 요소를 일일이 접근해서 합계를 구한 방식
    int sum2 = 0;

    sum2 += arr[0];
    sum2 += arr[1];
    sum2 += arr[2];
    sum2 += arr[3];
    sum2 += arr[4];

    /* 위도 반복문으로 대체 가능하다:
     * for (int i = 0; i < arr.length; i++) {
     *     sum2 += arr[i];
     * }
     */

    System.out.println("sum2 = " + sum2);  // 출력 결과: sum2 = 150
  }
}
